// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.112.0/containers/cpp
{
    "name": "RISC-V-TLM C++ Ubuntu Dev Environment",
    "dockerFile": "Dockerfile",
    "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"],
    // "runArgs": [ "-u", "1000:1000", "--security-opt", "label=disable" ],
    "remoteUser": "vscode",
    // "containerEnv": {
    //     "HOME": ""
    // },
    // "workspaceMount": "source=${localWorkspaceFolder},target=/home/vscode/workspace,type=bind",
    "workspaceFolder": "/home/vscode/workspace",

    // Set *default* container specific settings.json values on container create.
    "settings": { 
        "terminal.integrated.shell.linux": "/bin/bash"
    },

    // Add the IDs of extensions you want installed when the container is created.
    "extensions": [
        "ms-vscode.cpptools",
        "ms-vscode.cmake-tools",
        "twxs.cmake",
        "llvm-vs-code-extensions.vscode-clangd"
    ],

    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],
    "mounts": [
        "source=${localWorkspaceFolder},target=/home/vscode/workspace,type=bind,consistency=cached"
    ]
    // "mounts": [
    //     "type=bind,source=${localWorkspaceFolder},target=/home/vscode/workspace"
    // ]

    // Use 'postCreateCommand' to run commands after the container is created.
    // "postCreateCommand": "bear make",

    // Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.

}
